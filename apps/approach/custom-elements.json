{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/firebase/firebaseConfig.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "firebaseConfig",
          "type": {
            "text": "object"
          },
          "default": "{ apiKey: 'AIzaSyCGaJKzrUv_TgD97QLt-ydGPBbpCyCnrEw', authDomain: 'peg-2035.firebaseapp.com', projectId: 'peg-2035', storageBucket: 'peg-2035.appspot.com', messagingSenderId: '1039825199205', appId: '1:1039825199205:web:44d7dfd0f6f970c0ee668c', measurementId: 'G-FE9PXQ6LLX', }"
        },
        {
          "kind": "variable",
          "name": "db"
        },
        {
          "kind": "variable",
          "name": "auth"
        },
        {
          "kind": "variable",
          "name": "storage"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "firebaseConfig",
          "declaration": {
            "name": "firebaseConfig",
            "module": "src/firebase/firebaseConfig.ts"
          }
        },
        {
          "kind": "js",
          "name": "db",
          "declaration": {
            "name": "db",
            "module": "src/firebase/firebaseConfig.ts"
          }
        },
        {
          "kind": "js",
          "name": "auth",
          "declaration": {
            "name": "auth",
            "module": "src/firebase/firebaseConfig.ts"
          }
        },
        {
          "kind": "js",
          "name": "storage",
          "declaration": {
            "name": "storage",
            "module": "src/firebase/firebaseConfig.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/server/rag-server.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/auth.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "userSignal"
        },
        {
          "kind": "variable",
          "name": "isLoggedIn"
        },
        {
          "kind": "function",
          "name": "signInWithGoogle"
        },
        {
          "kind": "function",
          "name": "signOut"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "userSignal",
          "declaration": {
            "name": "userSignal",
            "module": "src/stores/auth.ts"
          }
        },
        {
          "kind": "js",
          "name": "isLoggedIn",
          "declaration": {
            "name": "isLoggedIn",
            "module": "src/stores/auth.ts"
          }
        },
        {
          "kind": "js",
          "name": "signInWithGoogle",
          "declaration": {
            "name": "signInWithGoogle",
            "module": "src/stores/auth.ts"
          }
        },
        {
          "kind": "js",
          "name": "signOut",
          "declaration": {
            "name": "signOut",
            "module": "src/stores/auth.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/electives.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "createElectives",
          "parameters": [
            {
              "name": "elective",
              "type": {
                "text": "{ name?: string; screenShot?: string; creationDate?: string; points?: number }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getElectives"
        },
        {
          "kind": "function",
          "name": "getElectiveSelect",
          "return": {
            "type": {
              "text": "Promise<{ id: string; name: string }[]>"
            }
          }
        },
        {
          "kind": "function",
          "name": "updateElectives",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "updatedData",
              "type": {
                "text": "{ points: number }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "deleteElectives",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createElectives",
          "declaration": {
            "name": "createElectives",
            "module": "src/stores/electives.ts"
          }
        },
        {
          "kind": "js",
          "name": "getElectives",
          "declaration": {
            "name": "getElectives",
            "module": "src/stores/electives.ts"
          }
        },
        {
          "kind": "js",
          "name": "getElectiveSelect",
          "declaration": {
            "name": "getElectiveSelect",
            "module": "src/stores/electives.ts"
          }
        },
        {
          "kind": "js",
          "name": "updateElectives",
          "declaration": {
            "name": "updateElectives",
            "module": "src/stores/electives.ts"
          }
        },
        {
          "kind": "js",
          "name": "deleteElectives",
          "declaration": {
            "name": "deleteElectives",
            "module": "src/stores/electives.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/exampleAsync.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/exampleDb.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/jwtValues.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/npmInfo.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "NpmInfo",
          "members": [
            {
              "kind": "field",
              "name": "#packageName",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "packageName"
            },
            {
              "kind": "field",
              "name": "#npmInfo",
              "privacy": "private",
              "default": "new AsyncComputed<NpmPackage>(async abortSignal => { if (!this.packageName) { return DEFAULT_NPM_PACKAGE; } const response = await fetch(`https://registry.npmjs.org/${this.packageName}`, { signal: abortSignal }); // Artificial delay for demo purposes await new Promise(r => setTimeout(r, 1000)); if (!response.ok) { return DEFAULT_NPM_PACKAGE; } return (await response.json()) as NpmPackage; })"
            },
            {
              "kind": "field",
              "name": "info",
              "readonly": true
            }
          ]
        },
        {
          "kind": "function",
          "name": "renderAsyncComputed",
          "parameters": [
            {
              "name": "v",
              "type": {
                "text": "AsyncComputed<T>"
              }
            },
            {
              "name": "{\n    initial,\n    pending,\n    complete,\n    error,\n  }",
              "type": {
                "text": "{\n    initial?: () => unknown;\n    pending?: () => unknown;\n    complete?: (value: T) => unknown;\n    error?: (error: unknown) => unknown;\n  }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NpmInfo",
          "declaration": {
            "name": "NpmInfo",
            "module": "src/stores/npmInfo.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderAsyncComputed",
          "declaration": {
            "name": "renderAsyncComputed",
            "module": "src/stores/npmInfo.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/pageAuthor.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PageAuthorState",
          "members": [
            {
              "kind": "field",
              "name": "#uid",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "uid"
            },
            {
              "kind": "field",
              "name": "#markdown",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "markdown"
            },
            {
              "kind": "field",
              "name": "#resourceName",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resourceName"
            },
            {
              "kind": "field",
              "name": "#linkResource",
              "privacy": "private",
              "type": {
                "text": "Signal.State<LinkResource>"
              }
            },
            {
              "kind": "field",
              "name": "linkResource"
            },
            {
              "kind": "field",
              "name": "#resourceImage",
              "privacy": "private",
              "type": {
                "text": "Signal.State<URL[]>"
              }
            },
            {
              "kind": "field",
              "name": "resourceImage"
            },
            {
              "kind": "field",
              "name": "#pages",
              "privacy": "private",
              "type": {
                "text": "Signal.State<Page[]>"
              }
            },
            {
              "kind": "field",
              "name": "pages"
            },
            {
              "kind": "field",
              "name": "#pageAuthor",
              "privacy": "private",
              "type": {
                "text": "Signal.State<PageAuthor>"
              }
            },
            {
              "kind": "field",
              "name": "pageAuthor",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#pageAuthorState",
              "privacy": "private",
              "default": "new AsyncComputed<PageAuthor | undefined>(async abortSignal => { console.log('RUNNING'); console.log('CURRENTIII\\n', JSON.stringify(this.#pageAuthor.get())); if (this.uid === undefined || this.uid === 'void') { if (userSignal) { this.uid = '' + userSignal.get()?.uid; } else { console.error('UID ON UPDATE IS BROKEN ' + this.#uid.get()); return undefined; } } if (!abortSignal.aborted && this.#resourceName.get() !== 'void' && this.#resourceName.get() != '') { this.#pageAuthor.set({ ...this.#pageAuthor.get(), resourceGraph: { ...this.#pageAuthor.get().resourceGraph, name: this.#resourceName.get(), }, }); console.log('PERSISTING NAME\\n ' + this.#resourceName.get() + '\\n ' + this.uid + '\\n ' + Date.now()); this.#resourceName.set(''); } if (!abortSignal.aborted && this.#markdown.get() != '') { this.#pageAuthor.set({ ...this.#pageAuthor.get(), resourceGraph: { ...this.#pageAuthor.get().resourceGraph, markdown: this.#markdown.get(), }, }); console.log('PERSISTING MARKDOWN\\n ' + this.#markdown.get() + '\\n ' + this.uid + '\\n ' + Date.now()); this.#markdown.set(''); } return this.#pageAuthor.get() as PageAuthor; })"
            },
            {
              "kind": "field",
              "name": "persisted",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "_updatePageAuthor",
              "privacy": "private"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "pageAuthor",
          "default": "new PageAuthorState()"
        },
        {
          "kind": "function",
          "name": "renderAsyncComputed",
          "parameters": [
            {
              "name": "v",
              "type": {
                "text": "AsyncComputed<T>"
              }
            },
            {
              "name": "{\n    initial,\n    pending,\n    complete,\n    error,\n  }",
              "type": {
                "text": "{\n    initial?: () => unknown;\n    pending?: () => unknown;\n    complete?: (value: T) => unknown;\n    error?: (error: unknown) => unknown;\n  }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setPageAuthorUid",
          "parameters": [
            {
              "name": "uid",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PageAuthorState",
          "declaration": {
            "name": "PageAuthorState",
            "module": "src/stores/pageAuthor.ts"
          }
        },
        {
          "kind": "js",
          "name": "pageAuthor",
          "declaration": {
            "name": "pageAuthor",
            "module": "src/stores/pageAuthor.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderAsyncComputed",
          "declaration": {
            "name": "renderAsyncComputed",
            "module": "src/stores/pageAuthor.ts"
          }
        },
        {
          "kind": "js",
          "name": "setPageAuthorUid",
          "declaration": {
            "name": "setPageAuthorUid",
            "module": "src/stores/pageAuthor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/player.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "initializePlayer",
          "return": {
            "type": {
              "text": "Player"
            }
          }
        },
        {
          "kind": "variable",
          "name": "player"
        },
        {
          "kind": "function",
          "name": "setPlayerUid",
          "parameters": [
            {
              "name": "uid",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "initializePlayer",
          "declaration": {
            "name": "initializePlayer",
            "module": "src/stores/player.ts"
          }
        },
        {
          "kind": "js",
          "name": "player",
          "declaration": {
            "name": "player",
            "module": "src/stores/player.ts"
          }
        },
        {
          "kind": "js",
          "name": "setPlayerUid",
          "declaration": {
            "name": "setPlayerUid",
            "module": "src/stores/player.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/players.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getPlayers"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getPlayers",
          "declaration": {
            "name": "getPlayers",
            "module": "src/stores/players.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/project.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "createProject",
          "parameters": [
            {
              "name": "project",
              "type": {
                "text": "{\n  name: string;\n  points: number;\n  screenshotUrl: string;\n  videoUrl: string;\n  markdown: string;\n  deploymentUrl: string;\n  electives: string[];\n}"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "getProject"
        },
        {
          "kind": "function",
          "name": "updateProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "updatedData",
              "type": {
                "text": "{\n    name: string;\n    points: number;\n    screenshotUrl: string;\n    videoUrl: string;\n    markdown: string;\n    deploymentUrl: string;\n    electives: string[];\n  }"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "deleteProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createProject",
          "declaration": {
            "name": "createProject",
            "module": "src/stores/project.ts"
          }
        },
        {
          "kind": "js",
          "name": "getProject",
          "declaration": {
            "name": "getProject",
            "module": "src/stores/project.ts"
          }
        },
        {
          "kind": "js",
          "name": "updateProject",
          "declaration": {
            "name": "updateProject",
            "module": "src/stores/project.ts"
          }
        },
        {
          "kind": "js",
          "name": "deleteProject",
          "declaration": {
            "name": "deleteProject",
            "module": "src/stores/project.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/resource.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "initializeResourceGraph",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'void', image: [], video: [], site: [], markdown: '', }"
        },
        {
          "kind": "function",
          "name": "upsertResourceGraph",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "root",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "path",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "K"
              }
            },
            {
              "name": "value",
              "type": {
                "text": "ResourceGraph[K]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "initializeResourceGraph",
          "declaration": {
            "name": "initializeResourceGraph",
            "module": "src/stores/resource.ts"
          }
        },
        {
          "kind": "js",
          "name": "upsertResourceGraph",
          "declaration": {
            "name": "upsertResourceGraph",
            "module": "src/stores/resource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/stores/upload.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "fileToUpload"
        },
        {
          "kind": "variable",
          "name": "fileUploadProgress"
        },
        {
          "kind": "function",
          "name": "uploadFileTask",
          "return": {
            "type": {
              "text": "Promise<string>"
            }
          },
          "parameters": [
            {
              "name": "uploadIdentifier",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "clearUploadObservables"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fileToUpload",
          "declaration": {
            "name": "fileToUpload",
            "module": "src/stores/upload.ts"
          }
        },
        {
          "kind": "js",
          "name": "fileUploadProgress",
          "declaration": {
            "name": "fileUploadProgress",
            "module": "src/stores/upload.ts"
          }
        },
        {
          "kind": "js",
          "name": "uploadFileTask",
          "declaration": {
            "name": "uploadFileTask",
            "module": "src/stores/upload.ts"
          }
        },
        {
          "kind": "js",
          "name": "clearUploadObservables",
          "declaration": {
            "name": "clearUploadObservables",
            "module": "src/stores/upload.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/test/peg-app_test.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/awr-markdown-codemirror.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AwrMarkdownCodeMirror",
          "members": [
            {
              "kind": "field",
              "name": "markdownContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "markdownContent"
            },
            {
              "kind": "field",
              "name": "listener",
              "default": "EditorView.updateListener.of((update: ViewUpdate) => { if (update.docChanged) { this.markdownContent = update.state.doc.toString(); this.requestUpdate(); } })"
            },
            {
              "kind": "field",
              "name": "editorView",
              "type": {
                "text": "EditorView | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "handleMarkdownBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderMarkdown",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "markdown-updated",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "markdown-update",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "markdownContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "markdownContent"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "awr-markdown-codemirror",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AwrMarkdownCodeMirror",
          "declaration": {
            "name": "AwrMarkdownCodeMirror",
            "module": "src/ui/awr-markdown-codemirror.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "awr-markdown-codemirror",
          "declaration": {
            "name": "AwrMarkdownCodeMirror",
            "module": "src/ui/awr-markdown-codemirror.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/awr-resource-documenter.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AwrResourceDocumenter",
          "members": [
            {
              "kind": "field",
              "name": "resourcePageType",
              "type": {
                "text": "ResourcePageType"
              },
              "default": "'void'",
              "attribute": "resourcePageType"
            },
            {
              "kind": "field",
              "name": "markdownText",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "resourceGraph",
              "type": {
                "text": "ResourceGraph"
              },
              "default": "initializeResourceGraph"
            },
            {
              "kind": "method",
              "name": "handleTextChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMarkdownUpdate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleLinkUrlUpdateBackEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "linkType",
                  "type": {
                    "text": "UrlMediaType"
                  }
                },
                {
                  "name": "url",
                  "type": {
                    "text": "URL"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleUploadLinkAddUrl",
              "privacy": "private",
              "parameters": [
                {
                  "name": "linkType",
                  "type": {
                    "text": "UrlMediaType"
                  }
                },
                {
                  "name": "url",
                  "type": {
                    "text": "URL"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "text-change",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "link-make-add",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "resourcePageType",
              "type": {
                "text": "ResourcePageType"
              },
              "default": "'void'",
              "fieldName": "resourcePageType"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "awr-resource-documenter",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AwrResourceDocumenter",
          "declaration": {
            "name": "AwrResourceDocumenter",
            "module": "src/ui/awr-resource-documenter.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "awr-resource-documenter",
          "declaration": {
            "name": "AwrResourceDocumenter",
            "module": "src/ui/awr-resource-documenter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/awr-sgmtd-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AwrSgmtdButton",
          "members": [
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "string"
              },
              "default": "'0'",
              "attribute": "selected"
            },
            {
              "kind": "field",
              "name": "disabledOptions",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "attribute": "disabledOptions"
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "privacy": "private",
              "parameters": [
                {
                  "name": "option",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "selection-change",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "selected",
              "type": {
                "text": "string"
              },
              "default": "'0'",
              "fieldName": "selected"
            },
            {
              "name": "disabledOptions",
              "type": {
                "text": "string[]"
              },
              "default": "[]",
              "fieldName": "disabledOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "m3-segmented-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AwrSgmtdButton",
          "declaration": {
            "name": "AwrSgmtdButton",
            "module": "src/ui/awr-sgmtd-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "m3-segmented-button",
          "declaration": {
            "name": "AwrSgmtdButton",
            "module": "src/ui/awr-sgmtd-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/awr-upload-link.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AwrUploadLink",
          "members": [
            {
              "kind": "field",
              "name": "resourceLinkType",
              "type": {
                "text": "UrlMediaType"
              },
              "default": "'void'",
              "attribute": "resourceLinkType"
            },
            {
              "kind": "field",
              "name": "resourcePageType",
              "type": {
                "text": "ResourcePageType"
              },
              "default": "'void'",
              "attribute": "resourcePageType"
            },
            {
              "kind": "field",
              "name": "linkUrl",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "linkUrl"
            },
            {
              "kind": "field",
              "name": "imageValid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "imageValid"
            },
            {
              "kind": "field",
              "name": "showUrlContainer",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showUploader",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showContent",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showLinkInput",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "fileName",
              "type": {
                "text": "string"
              },
              "default": "'Select File to Upload'"
            },
            {
              "kind": "field",
              "name": "generatedLink",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "disabledOptions",
              "type": {
                "text": "string[]"
              },
              "privacy": "public",
              "default": "['Add', '0']"
            },
            {
              "kind": "method",
              "name": "uploadFile",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateImage"
            },
            {
              "kind": "method",
              "name": "isValidUrl",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleSelectionChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "triggerUpload",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "triggerLink",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "triggerAdd",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "triggerNone",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "upload-link-gather-url",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "upload-link-allocate",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "resourceLinkType",
              "type": {
                "text": "UrlMediaType"
              },
              "default": "'void'",
              "fieldName": "resourceLinkType"
            },
            {
              "name": "resourcePageType",
              "type": {
                "text": "ResourcePageType"
              },
              "default": "'void'",
              "fieldName": "resourcePageType"
            },
            {
              "name": "linkUrl",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "linkUrl"
            },
            {
              "name": "imageValid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "imageValid"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "uploaded-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AwrUploadLink",
          "declaration": {
            "name": "AwrUploadLink",
            "module": "src/ui/awr-upload-link.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "uploaded-link",
          "declaration": {
            "name": "AwrUploadLink",
            "module": "src/ui/awr-upload-link.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/bwp-bundle-app.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BwpBundleApp",
          "members": [],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bwp-bundle-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BwpBundleApp",
          "declaration": {
            "name": "BwpBundleApp",
            "module": "src/ui/bwp-bundle-app.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bwp-bundle-app",
          "declaration": {
            "name": "BwpBundleApp",
            "module": "src/ui/bwp-bundle-app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/bwp-page-author.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BwpPageAuthor",
          "members": [
            {
              "kind": "field",
              "name": "_pageAuthorState",
              "privacy": "private",
              "default": "pageAuthor"
            },
            {
              "kind": "field",
              "name": "resourcePageType",
              "type": {
                "text": "string"
              },
              "default": "'void'",
              "attribute": "resourcePageType"
            },
            {
              "kind": "method",
              "name": "handleTextChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleLink",
              "privacy": "private",
              "parameters": [
                {
                  "name": "urlMediaType",
                  "type": {
                    "text": "UrlMediaType"
                  }
                },
                {
                  "name": "url",
                  "type": {
                    "text": "URL"
                  }
                },
                {
                  "name": "makeAdd",
                  "type": {
                    "text": "MakeAdd"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "resourcePageType",
              "type": {
                "text": "string"
              },
              "default": "'void'",
              "fieldName": "resourcePageType"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bwp-page-author",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BwpPageAuthor",
          "declaration": {
            "name": "BwpPageAuthor",
            "module": "src/ui/bwp-page-author.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bwp-page-author",
          "declaration": {
            "name": "BwpPageAuthor",
            "module": "src/ui/bwp-page-author.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/bwp-page.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BwpPage",
          "members": [
            {
              "kind": "field",
              "name": "isDocumenterVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isAdd",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "isAdd"
            },
            {
              "kind": "field",
              "name": "resourcePageType",
              "type": {
                "text": "string"
              },
              "default": "'void'",
              "attribute": "resourcePageType"
            },
            {
              "kind": "method",
              "name": "handleSiteInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTargetSiteEntry",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "initId"
            },
            {
              "kind": "method",
              "name": "handleUpsert",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "isAdd",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "isAdd"
            },
            {
              "name": "resourcePageType",
              "type": {
                "text": "string"
              },
              "default": "'void'",
              "fieldName": "resourcePageType"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "bwp-page",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BwpPage",
          "declaration": {
            "name": "BwpPage",
            "module": "src/ui/bwp-page.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "bwp-page",
          "declaration": {
            "name": "BwpPage",
            "module": "src/ui/bwp-page.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/npm-info.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "NpmInfoElement",
          "members": [
            {
              "kind": "field",
              "name": "_npmInfo",
              "privacy": "private",
              "default": "new NpmInfo()"
            },
            {
              "kind": "method",
              "name": "_onChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "npm-info",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NpmInfoElement",
          "declaration": {
            "name": "NpmInfoElement",
            "module": "src/ui/npm-info.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "npm-info",
          "declaration": {
            "name": "NpmInfoElement",
            "module": "src/ui/npm-info.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/peg-bundle-admin.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "An example element.",
          "name": "PegBundleAdmin",
          "cssParts": [
            {
              "description": "The button",
              "name": "button"
            }
          ],
          "slots": [
            {
              "description": "This element has a slot",
              "name": ""
            }
          ],
          "members": [],
          "events": [
            {
              "description": "Indicates when the count changes",
              "name": "count-changed"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peg-bundle-admin",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PegBundleAdmin",
          "declaration": {
            "name": "PegBundleAdmin",
            "module": "src/ui/peg-bundle-admin.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peg-bundle-admin",
          "declaration": {
            "name": "PegBundleAdmin",
            "module": "src/ui/peg-bundle-admin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/peg-bundle-app.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PegBundleApp",
          "members": [
            {
              "kind": "field",
              "name": "playerGraph",
              "type": {
                "text": "Player | null"
              },
              "privacy": "private"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peg-bundle-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PegBundleApp",
          "declaration": {
            "name": "PegBundleApp",
            "module": "src/ui/peg-bundle-app.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peg-bundle-app",
          "declaration": {
            "name": "PegBundleApp",
            "module": "src/ui/peg-bundle-app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/peg-bundle-elective-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PegBundleElectiveMenu",
          "members": [
            {
              "kind": "field",
              "name": "electives",
              "type": {
                "text": "Array<{ id: string; name?: string; screenShot?: string; creationDate?: string; points?: number }>"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "loadElectives"
            },
            {
              "kind": "method",
              "name": "navigateToPage",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peg-bundle-elective-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PegBundleElectiveMenu",
          "declaration": {
            "name": "PegBundleElectiveMenu",
            "module": "src/ui/peg-bundle-elective-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peg-bundle-elective-menu",
          "declaration": {
            "name": "PegBundleElectiveMenu",
            "module": "src/ui/peg-bundle-elective-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/peg-bundle-electives-admin.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PegBundleElectivesAdmin",
          "members": [
            {
              "kind": "field",
              "name": "electives",
              "type": {
                "text": "Array<{ id: string; name?: string; screenShot?: string; creationDate?: string; points?: number }>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "fileName",
              "type": {
                "text": "string"
              },
              "default": "'No screenshot chosen'"
            },
            {
              "kind": "method",
              "name": "loadElectives"
            },
            {
              "kind": "method",
              "name": "handleCreate"
            },
            {
              "kind": "method",
              "name": "handleUpdate",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDelete",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peg-bundle-electives-admin",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PegBundleElectivesAdmin",
          "declaration": {
            "name": "PegBundleElectivesAdmin",
            "module": "src/ui/peg-bundle-electives-admin.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peg-bundle-electives-admin",
          "declaration": {
            "name": "PegBundleElectivesAdmin",
            "module": "src/ui/peg-bundle-electives-admin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/peg-player.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PegPlayer",
          "members": [
            {
              "kind": "field",
              "name": "projects",
              "type": {
                "text": "Array<{\n    id: string;\n    name?: string;\n    points?: number;\n    screenshotUrl?: string;\n    videoUrl?: string;\n    markdown?: string;\n    deploymentUrl?: string;\n    electives?: string[];\n  }>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "electivesOptions",
              "type": {
                "text": "{ id: string; name: string }[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "editingProjectId",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "formData",
              "type": {
                "text": "object"
              },
              "default": "{ name: '', points: '', screenshotUrl: '', videoUrl: '', markdown: '', deploymentUrl: '', electives: [] as string[], }"
            },
            {
              "kind": "method",
              "name": "loadProject"
            },
            {
              "kind": "method",
              "name": "loadElectives"
            },
            {
              "kind": "method",
              "name": "handleInputChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleCreateOrUpdate"
            },
            {
              "kind": "method",
              "name": "handleEdit",
              "parameters": [
                {
                  "name": "projectId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDelete",
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleImageUrlUpdate",
              "parameters": [
                {
                  "name": "field",
                  "type": {
                    "text": "keyof typeof this.formData"
                  }
                },
                {
                  "name": "imageUrl",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleAutoResize",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clearForm"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peg-player",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PegPlayer",
          "declaration": {
            "name": "PegPlayer",
            "module": "src/ui/peg-player.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peg-player",
          "declaration": {
            "name": "PegPlayer",
            "module": "src/ui/peg-player.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ui/peg-players-admin.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PegPlayersAdmin",
          "members": [
            {
              "kind": "field",
              "name": "players",
              "type": {
                "text": "Array<{\n    userId?: string;\n    id: string;\n    displayName?: string;\n  }>"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "loadPlayers"
            }
          ],
          "mixins": [
            {
              "name": "SignalWatcher",
              "package": "@lit-labs/signals"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "players-admin",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PegPlayersAdmin",
          "declaration": {
            "name": "PegPlayersAdmin",
            "module": "src/ui/peg-players-admin.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "players-admin",
          "declaration": {
            "name": "PegPlayersAdmin",
            "module": "src/ui/peg-players-admin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/synchElectives.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "returnStringWithSpaces",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "input",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "returnStringWithSpaces",
          "declaration": {
            "name": "returnStringWithSpaces",
            "module": "src/util/synchElectives.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/util.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "generateShortUUID",
          "return": {
            "type": {
              "text": "string"
            }
          }
        },
        {
          "kind": "function",
          "name": "initId"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "generateShortUUID",
          "declaration": {
            "name": "generateShortUUID",
            "module": "src/util/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "initId",
          "declaration": {
            "name": "initId",
            "module": "src/util/util.ts"
          }
        }
      ]
    }
  ]
}
